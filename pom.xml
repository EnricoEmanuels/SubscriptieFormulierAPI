<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>sr.unasat</groupId>
  <artifactId>SubscriptieFormulierAPI</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>SubscriptieFormulierAPI</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>

    <!-- maar 1 junit hebben -->

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.2</version>
      <scope>test</scope>
    </dependency>

    <!-- Jersey REST API -->

    <!-- Jersey servlet -->
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-server</artifactId>
      <version>3.1.1</version>
    </dependency>

    <!-- Jersey hk2 -->
    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
      <version>3.1.1</version>
    </dependency>

    <!-- Jersey deze media om om jason te conventeren van jason naar java en omgekeerd -->
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <version>3.1.1</version>
    </dependency>

    <!-- recente versie van jaxb -->
<!--    <dependency>-->
<!--      <groupId>org.glassfish.jaxb</groupId>-->
<!--      <artifactId>jaxb-runtime</artifactId>-->
<!--      <version>4.0.5</version>-->
<!--    </dependency>-->


    <!-- Jetty Embedded Server dit gebruiken omdat tomcat te oud is  -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>11.0.24</version>
    </dependency>

    <!-- dit is voor een webapp -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-webapp</artifactId>
      <version>11.0.24</version>
    </dependency>

    <!-- bij jdk 21 moet je die container ook zetten -->
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet</artifactId>
      <version>3.1.1</version>
    </dependency>
    <!-- Java 21 Compatibility -->
    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <version>6.0.0</version>
    </dependency>

    <!-- dit is voor login purposes -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>2.0.9</version>
    </dependency>

    <!-- dit is ook voor die jackson -->
    <!--        <dependency>-->
    <!--            <groupId>jakarta.xml.bind</groupId>-->
    <!--            <artifactId>jakarta.xml.bind-api</artifactId>-->
    <!--            <version>3.0.1</version>-->
    <!--        </dependency>-->

    <!-- al die ander componeneten zijn voor je jackson -->
    <dependency>
      <groupId>org.glassfish.jaxb</groupId>
      <artifactId>jaxb-runtime</artifactId>
      <version>3.0.1</version>
    </dependency>

    <!-- JPA API -->
    <dependency>
      <groupId>jakarta.persistence</groupId>
      <artifactId>jakarta.persistence-api</artifactId>
      <version>3.1.0</version>
    </dependency>
    <!-- Other existing dependencies -->

    <!-- Hibernate Core -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>6.2.7.Final</version>
    </dependency>


    <!-- MySQL Connector -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>8.0.33</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate.orm</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>6.0.2.Final</version>
    </dependency>

    <!-- JUnit for testing -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.11.0</version>
      <scope>test</scope>
    </dependency>

<!--    <dependency>-->
<!--      <groupId>junit</groupId>-->
<!--      <artifactId>junit</artifactId>-->
<!--      <version>4.10</version>-->
<!--      <scope>test</scope>-->
<!--    </dependency>-->

  </dependencies>

  <!-- verandert naar subscriptie-api finalName  -->
  <!-- je target folder is waar je project wordt opgebouwd   -->
  <!-- en in je TARGET folder ga je jouw jar vinden met de naam die je het hebt gegeven in je finalname   -->
  <!-- finalName is de naam die je file zal krigen na het gecompilled is na mvn clean package  -->
  <!-- die shade dependency package al die extra dependencies of libraries  -->
  <!-- eerst de commando mvn clean package om de package te bouwen en vervolgens  -->
  <!-- java -jar target/subscriptie-api.jar deze commando om applicatie te rennen  -->
  <!-- java -jar target/subscriptie-api.jar -->

  <build>
    <finalName>subscriptie-api</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>sr.unasat.form.api.SubscriptieConfig</mainClass> <!-- Replace with your main class -->
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
        <configuration>
          <source>17</source>
          <target>17</target>
        </configuration>
      </plugin>
    </plugins>
  </build>


</project>
